/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xiaomi.infra.galaxy.sds.thrift;


import java.util.Map;
import java.util.HashMap;
import libthrift091.TEnum;

/**
 * 统计指标的子类型
 * (MetricKey, MetricType) 元组唯一确定一个统计指标
 */
public enum MetricType implements libthrift091.TEnum {
  /**
   * 计数器，支持速率类型和直方图类型的统计指标
   */
  COUNT(1),
  /**
   * 1分钟CPS(Count Per Second)均值，支持速率类型的统计指标
   */
  M1_RATE(2),
  /**
   * 5分钟CPS(Count Per Second)均值，支持速率类型的统计指标
   */
  M5_RATE(3),
  /**
   * 15分钟CPS(Count Per Second)均值，支持速率类型的统计指标
   */
  M15_RATE(4),
  /**
   * 均值，支持直方图类型的统计指标
   */
  MEAN(5),
  /**
   * 标准差，支持直方图类型的统计指标
   */
  STDDEV(6),
  /**
   * 中位数，支持直方图类型的统计指标
   */
  P50(7),
  /**
   * 75%百分位数，支持直方图类型的统计指标
   */
  P75(8),
  /**
   * 95%百分位数，支持直方图类型的统计指标
   */
  P95(9),
  /**
   * 98%百分位数，支持直方图类型的统计指标
   */
  P98(10),
  /**
   * 99%百分位数，支持直方图类型的统计指标
   */
  P99(11);

  private final int value;

  private MetricType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static MetricType findByValue(int value) { 
    switch (value) {
      case 1:
        return COUNT;
      case 2:
        return M1_RATE;
      case 3:
        return M5_RATE;
      case 4:
        return M15_RATE;
      case 5:
        return MEAN;
      case 6:
        return STDDEV;
      case 7:
        return P50;
      case 8:
        return P75;
      case 9:
        return P95;
      case 10:
        return P98;
      case 11:
        return P99;
      default:
        return null;
    }
  }
}
