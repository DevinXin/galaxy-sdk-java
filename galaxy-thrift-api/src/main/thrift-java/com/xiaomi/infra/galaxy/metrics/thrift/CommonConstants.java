/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xiaomi.infra.galaxy.metrics.thrift;

import libthrift091.scheme.IScheme;
import libthrift091.scheme.SchemeFactory;
import libthrift091.scheme.StandardScheme;

import libthrift091.scheme.TupleScheme;
import libthrift091.protocol.TTupleProtocol;
import libthrift091.protocol.TProtocolException;
import libthrift091.EncodingUtils;
import libthrift091.TException;
import libthrift091.async.AsyncMethodCallback;
import libthrift091.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
public class CommonConstants {

  /**
   * client端读写超时时间（ms）
   */
  public static final double DEFAULT_CLIENT_TIMEOUT = (double)10000;

  /**
   * client端连接超时时间（ms）
   */
  public static final double DEFAULT_CLIENT_CONN_TIMEOUT = (double)3000;

  /**
   * RPC根路径
   */
  public static final String API_ROOT_PATH = "/v1/api";

  /**
   * metrics读写RPC路径
   */
  public static final String METRICS_SERVICE_PATH = "/v1/api/metrics";

  /**
   * 报警规则读写RPC路径
   */
  public static final String JUDGE_SERVICE_PATH = "/v1/api/judge";

  /**
   * Dashboard读写RPC路径
   */
  public static final String DASHBOARD_SERVICE_PATH = "/v1/api/dashboard";

  /**
   * 兼容其它SDK，等同于application/x-thrift-json
   */
  public static final String DEFAULT_THRIFT_HEADER = "application/x-thrift";

  public static final String THRIFT_JSON_HEADER = "application/x-thrift-json";

  public static final String THRIFT_COMPACT_HEADER = "application/x-thrift-compact";

  public static final String THRIFT_BINARY_HEADER = "application/x-thrift-binary";

  public static final String THRIFT_JSON_PROTOCOL_CLASS = "TJSONProtocol";

  public static final String THRIFT_BINARY_PROTOCOL_CLASS = "TBinaryProtocol";

  public static final String THRIFT_COMPACT_PROTOCOL_CLASS = "TCompactProtocol";

  public static final String THRIFT_BINARY_PROTOCOL_ACCELERATED_CLASS = "TBinaryProtocolAccelerated";

  public static final Map<ThriftProtocol,String> THRIFT_HEADER_MAP = new HashMap<ThriftProtocol,String>();
  static {
    THRIFT_HEADER_MAP.put(com.xiaomi.infra.galaxy.metrics.thrift.ThriftProtocol.TCOMPACT, "application/x-thrift-compact");
    THRIFT_HEADER_MAP.put(com.xiaomi.infra.galaxy.metrics.thrift.ThriftProtocol.TJSON, "application/x-thrift-json");
    THRIFT_HEADER_MAP.put(com.xiaomi.infra.galaxy.metrics.thrift.ThriftProtocol.TBINARY, "application/x-thrift-binary");
    THRIFT_HEADER_MAP.put(com.xiaomi.infra.galaxy.metrics.thrift.ThriftProtocol.TBINARYACCELERATED, "application/x-thrift-binary");
  }

  public static final Map<String,ThriftProtocol> HEADER_THRIFT_MAP = new HashMap<String,ThriftProtocol>();
  static {
    HEADER_THRIFT_MAP.put("application/x-thrift-compact", com.xiaomi.infra.galaxy.metrics.thrift.ThriftProtocol.TCOMPACT);
    HEADER_THRIFT_MAP.put("application/x-thrift-json", com.xiaomi.infra.galaxy.metrics.thrift.ThriftProtocol.TJSON);
    HEADER_THRIFT_MAP.put("application/x-thrift-binary", com.xiaomi.infra.galaxy.metrics.thrift.ThriftProtocol.TBINARY);
    HEADER_THRIFT_MAP.put("application/x-thrift", com.xiaomi.infra.galaxy.metrics.thrift.ThriftProtocol.TJSON);
  }

  public static final Map<ThriftProtocol,String> THRIFT_PROTOCOL_MAP = new HashMap<ThriftProtocol,String>();
  static {
    THRIFT_PROTOCOL_MAP.put(com.xiaomi.infra.galaxy.metrics.thrift.ThriftProtocol.TCOMPACT, "TCompactProtocol");
    THRIFT_PROTOCOL_MAP.put(com.xiaomi.infra.galaxy.metrics.thrift.ThriftProtocol.TJSON, "TJSONProtocol");
    THRIFT_PROTOCOL_MAP.put(com.xiaomi.infra.galaxy.metrics.thrift.ThriftProtocol.TBINARY, "TBinaryProtocol");
    THRIFT_PROTOCOL_MAP.put(com.xiaomi.infra.galaxy.metrics.thrift.ThriftProtocol.TBINARYACCELERATED, "TBinaryProtocolAccelerated");
  }

  /**
   * HTTP请求的超时时限
   */
  public static final String HK_REQUEST_TIMEOUT = "X-Xiaomi-Request-Timeout";

  /**
   * HTTP头的错误码
   */
  public static final String HK_ERROR_CODE_HEADER = "X-Xiaomi-Error-Code";

}
