/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xiaomi.infra.galaxy.emr.thrift;


import java.util.Map;
import java.util.HashMap;
import libthrift091.TEnum;

public enum Permission implements libthrift091.TEnum {
  NONE(0),
  /**
   * all permission, including change permission of a cluster
   */
  FULL_CONTROL(1),
  /**
   * all of operations that could change resouce's status require WRITE permission
   * for example: createCluster, terminateCluster
   */
  ADMIN(2),
  /**
   * all of 'list, describe' operations require READ permission
   */
  READ(3),
  /**
   * can use the cluster that already created
   * for example: submitJob
   */
  WRITE(4),
  READ_WRITE(5),
  READ_WRITE_ADMIN(6);

  private final int value;

  private Permission(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static Permission findByValue(int value) { 
    switch (value) {
      case 0:
        return NONE;
      case 1:
        return FULL_CONTROL;
      case 2:
        return ADMIN;
      case 3:
        return READ;
      case 4:
        return WRITE;
      case 5:
        return READ_WRITE;
      case 6:
        return READ_WRITE_ADMIN;
      default:
        return null;
    }
  }
}
