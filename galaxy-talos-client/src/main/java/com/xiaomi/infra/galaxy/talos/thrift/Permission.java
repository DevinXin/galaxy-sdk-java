/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xiaomi.infra.galaxy.talos.thrift;


import java.util.Map;
import java.util.HashMap;
import libthrift091.TEnum;

public enum Permission implements libthrift091.TEnum {
  /**
   * None permission;
   * 
   */
  NONE(0),
  /**
   * putMessages
   * 
   */
  PUT_MESSAGE(1),
  /**
   * getMessages
   * 
   */
  GET_MESSAGE(2),
  /**
   * PUT_MESSAGE and GET_MESSAGE;
   * 
   */
  FULL_MESSAGE_CONTROL(3),
  /**
   * describeTopic;
   * 
   */
  DESCRIBE_TOPIC(4),
  /**
   * deleteTopic and changeTopicAttribute;
   * 
   */
  CHANGE_TOPIC(8),
  /**
   * CHECK_TOPIC and CHANGE_TOPIC;
   * 
   */
  FULL_TOPIC_CONTROL(12),
  /**
   * FULL_MESSAGE_CONTROL and FULL_TOPIC_CONTROL
   * 
   */
  FULL_CONTROL(15),
  /**
   * setPermission, revokePermission, addPermission and revokePermission, only
   * owner of the topic and Talos admin has CHANGE_PERMISSION permission by
   * default, and you can't add CHANGE_PERMISSION to a developerId, or you can't
   * revoke CHANGE_PERMISSION from the topic owner;
   * 
   */
  CHANGE_PERMISSION(16),
  /**
   * FULL_CONTROL and CHANGE_PERMISSION, only owner of the topic and Talos admin
   * have ADMIN permission by default.
   * 
   */
  ADMIN(31);

  private final int value;

  private Permission(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static Permission findByValue(int value) { 
    switch (value) {
      case 0:
        return NONE;
      case 1:
        return PUT_MESSAGE;
      case 2:
        return GET_MESSAGE;
      case 3:
        return FULL_MESSAGE_CONTROL;
      case 4:
        return DESCRIBE_TOPIC;
      case 8:
        return CHANGE_TOPIC;
      case 12:
        return FULL_TOPIC_CONTROL;
      case 15:
        return FULL_CONTROL;
      case 16:
        return CHANGE_PERMISSION;
      case 31:
        return ADMIN;
      default:
        return null;
    }
  }
}
